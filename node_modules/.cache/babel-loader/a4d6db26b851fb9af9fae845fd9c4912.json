{"ast":null,"code":"var _jsxFileName = \"/Users/shannonburris/Documents/UCF/homework/React Portfolio/react-portfolio/src/components/pages/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = e => {\n    // Getting the value and name of the input which triggered the change\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; // Based on the input type, we set the state of either email, username, and password\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setUserName(inputValue);\n    } else {\n      setPassword(inputValue);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault(); // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n\n    if (!validateEmail(email) || !userName) {\n      setErrorMessage('Email or username is invalid'); // We want to exit out of this code block if something is wrong so that the user can correct it\n\n      return; // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    }\n\n    if (!checkPassword(password)) {\n      setErrorMessage(`Choose a more secure password for the account: ${userName}`);\n      return;\n    }\n\n    alert(`Hello ${userName}`); // If everything goes according to plan, we want to clear out the input after a successful registration.\n\n    setUserName('');\n    setPassword('');\n    setEmail('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name1\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          type: \"name\",\n          class: \"form-control\",\n          id: \"name1\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleInputEmail1\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          type: \"email\",\n          class: \"form-control\",\n          id: \"exampleInputEmail1\",\n          \"aria-describedby\": \"emailHelp\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"message1\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          type: \"password\",\n          class: \"form-control\",\n          id: \"message1\",\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        id: \"button\",\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"42zIdPd0aRzv1KH8BVXrypGKENU=\");\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/shannonburris/Documents/UCF/homework/React Portfolio/react-portfolio/src/components/pages/Contact.js"],"names":["React","useState","validateEmail","Contact","email","setEmail","userName","setUserName","password","setPassword","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault","checkPassword","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAC/B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaD,CAAnB;AACA,UAAME,SAAS,GAAGD,MAAM,CAACE,IAAzB;AACA,UAAMC,UAAU,GAAGH,MAAM,CAACI,KAA1B,CAJ+B,CAM/B;;AACA,QAAIH,SAAS,KAAK,OAAlB,EAA2B;AACzBV,MAAAA,QAAQ,CAACY,UAAD,CAAR;AACD,KAFD,MAEO,IAAIF,SAAS,KAAK,UAAlB,EAA8B;AACnCR,MAAAA,WAAW,CAACU,UAAD,CAAX;AACD,KAFM,MAEA;AACLR,MAAAA,WAAW,CAACQ,UAAD,CAAX;AACD;AACF,GAdD;;AAgBA,QAAME,gBAAgB,GAAIN,CAAD,IAAO;AAC9B;AACAA,IAAAA,CAAC,CAACO,cAAF,GAF8B,CAI9B;;AACA,QAAI,CAAClB,aAAa,CAACE,KAAD,CAAd,IAAyB,CAACE,QAA9B,EAAwC;AACtCK,MAAAA,eAAe,CAAC,8BAAD,CAAf,CADsC,CAEtC;;AACA,aAHsC,CAItC;AACD;;AACD,QAAI,CAACU,aAAa,CAACb,QAAD,CAAlB,EAA8B;AAC5BG,MAAAA,eAAe,CACZ,kDAAiDL,QAAS,EAD9C,CAAf;AAGA;AACD;;AACDgB,IAAAA,KAAK,CAAE,SAAQhB,QAAS,EAAnB,CAAL,CAjB8B,CAmB9B;;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAvBD;;AAwBA,sBACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACA;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACF;AAAO,UAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,eAEF;AAAO,UAAA,QAAQ,EAAEO,iBAAjB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,KAAK,EAAC,cAAtD;AAAqE,UAAA,EAAE,EAAC,OAAxE;AAAgF,UAAA,WAAW,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFE;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKJ;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,QAAQ,EAAEA,iBAAlB;AAAqC,UAAA,IAAI,EAAC,OAA1C;AAAkD,UAAA,KAAK,EAAC,cAAxD;AAAuE,UAAA,EAAE,EAAC,oBAA1E;AAA+F,8BAAiB,WAAhH;AAA4H,UAAA,WAAW,EAAC;AAAxI;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALI,eASJ;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,QAAQ,EAAEA,iBAAlB;AAAqC,UAAA,IAAI,EAAC,UAA1C;AAAqD,UAAA,KAAK,EAAC,cAA3D;AAA0E,UAAA,EAAE,EAAC,UAA7E;AAAwF,UAAA,WAAW,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATI,eAaJ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAA8C,QAAA,EAAE,EAAC,QAAjD;AAA0D,QAAA,OAAO,EAAEO,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbI;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnEuBhB,O;;KAAAA,O","sourcesContent":["import React,  { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nexport default function Contact() {\n  const [email, setEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleInputChange = (e) => {\n    // Getting the value and name of the input which triggered the change\n    const { target } = e;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    // Based on the input type, we set the state of either email, username, and password\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setUserName(inputValue);\n    } else {\n      setPassword(inputValue);\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    e.preventDefault();\n\n    // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\n    if (!validateEmail(email) || !userName) {\n      setErrorMessage('Email or username is invalid');\n      // We want to exit out of this code block if something is wrong so that the user can correct it\n      return;\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\n    }\n    if (!checkPassword(password)) {\n      setErrorMessage(\n        `Choose a more secure password for the account: ${userName}`\n      );\n      return;\n    }\n    alert(`Hello ${userName}`);\n\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\n    setUserName('');\n    setPassword('');\n    setEmail('');\n  };\n  return (\n    <div class=\"body\">\n      <h1>Contact Page</h1>\n      <form>\n      <div class=\"form-group\">\n    <label for=\"name1\">Name</label>\n    <input onChange={handleInputChange} type=\"name\" class=\"form-control\" id=\"name1\" placeholder=\"Name\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input  onChange={handleInputChange} type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"message1\">Message</label>\n    <input  onChange={handleInputChange} type=\"password\" class=\"form-control\" id=\"message1\" placeholder=\"Message\" />\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" id=\"button\" onClick={handleFormSubmit}>Submit</button>\n</form>\n\n</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}